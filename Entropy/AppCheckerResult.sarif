{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json",
  "runs": [
    {
      "columnKind": "utf16CodeUnits",
      "invocations": [
        {
          "endTimeUtc": "2021-02-10T15:30:55.122Z",
          "executionSuccessful": true,
          "startTimeUtc": "2021-02-10T15:30:55.091Z"
        }
      ],
      "results": [
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 11,
                  "charOffset": 130,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        _selectedFilter: \"last-30-days\",\r\n        _result: Filter(\r\n            Reservations,\r\n            Lower(User) = Lower(User().Email) && StartDate < Today()\r\n        )\r\n    }\r\n)"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Appointments Screen",
                "type": "Appointments Screen.Filter_Last30DaysBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 142,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        _selectedFilter: \"last-30-days\",\r\n        _result: Filter(\r\n            Reservations,\r\n            Lower(User) = Lower(User().Email) && StartDate < Today()\r\n        )\r\n    }\r\n)"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Appointments Screen",
                "type": "Appointments Screen.Filter_Last30DaysBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Appointments Screen.Filter_Last30DaysBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 164,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        _selectedFilter: \"last-30-days\",\r\n        _result: Filter(\r\n            Reservations,\r\n            Lower(User) = Lower(User().Email) && StartDate < Today()\r\n        )\r\n    }\r\n)"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Appointments Screen",
                "type": "Appointments Screen.Filter_Last30DaysBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 6,
                  "charOffset": 336,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "âˆ‚.Location_x003a_City.Value"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 343,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 318,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 350,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 6,
                  "charOffset": 996,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "âˆ‚.Location_x003a_City.Value"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 1003,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 978,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 1010,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 6,
                  "charOffset": 1221,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "âˆ‚.Location_x003a_City.Value"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 1228,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 1203,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_BookBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 1235,
                  "snippet": {
                    "text": "UpdateContext(\r\n    {\r\n        ShowSpinner: true,\r\n        EnableBookBtn: false\r\n    }\r\n);\r\n//UpdateContext({ displayInfo: LookUp(Locations, Building = Building && City = City, ID) });\r\nUpdateContext(\r\n    {\r\n        displayInfo: LookUp(\r\n            Desks,\r\n            DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n            ID\r\n        )\r\n    }\r\n);\r\n// DOESN'T SEEM LIKE WE NEED TO SET THE TITLE\r\nPatch(\r\n    Reservations,\r\n    Defaults(Reservations),\r\n    {\r\n        StartDate: StartDate,\r\n        StartTime: StartTimeInMin,\r\n        EndTime: StartTimeInMin + LookUp(\r\n            Durations,\r\n            TimeLengthWritten = Duration,\r\n            TimeLength\r\n        ),\r\n        DeskID: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Id: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                ID\r\n            ),\r\n            Value: LookUp(\r\n                Desks,\r\n                DeskNumber = DeskNum && FloorNumber = FloorNum && 'Location:City'.Value = City && 'Location:Building'.Value = Building,\r\n                FloorNumber\r\n            )\r\n        },\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Confirmed\"\r\n        },\r\n        User: Lower(User().Email)\r\n    }\r\n);\r\nUpdateContext(\r\n    {\r\n        ShowSpinner: false,\r\n        EnableBookBtn: true,\r\n        StartDate: Blank(),\r\n        Duration: Blank(),\r\n        StartTime: Blank(),\r\n        EndTime: Blank(),\r\n        FloorNum: Blank(),\r\n        DeskNum: Blank(),\r\n        Building: Blank(),\r\n        City: Blank()\r\n    }\r\n);\r\nNavigate(\r\n    'Appointments Screen',\r\n    ScreenTransition.CoverRight\r\n);\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_BookBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_CancelBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_CancelBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 100,
                  "charOffset": 31,
                  "snippet": {
                    "text": "Patch(\r\n    Reservations,\r\n    First(\r\n        Filter(\r\n            Reservations,\r\n            ID = ReservationID\r\n        )\r\n    ),\r\n    {\r\n        Status: {\r\n            '@odata.type': \"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedReference\",\r\n            Value: \"Cancelled\"\r\n        }\r\n    }\r\n);\r\n//Refresh(Reservations);\r\nUpdateContext({Status: \"Cancelled\"});\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Details",
                "type": "Booking Details.Details_CancelBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "First"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByService",
          "ruleIndex": 2
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.OnChange"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.OnChange",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 6,
                  "charOffset": 426,
                  "snippet": {
                    "text": "// clear search results\r\nUpdateContext({_results: Table()});\r\n// clear dependent dropdowns\r\nReset(FloorDropdown);\r\n// populate floor dropdown\r\n//ClearCollect(FloorCol, {FloorNum: \"Any\"}); Collect(FloorCol, Distinct(Filter(Desks, 'Location:Building'.Value = BuildingDropdown.SelectedText.Value), FloorNumber));\r\nClearCollect(FloorColl, \"Any\");\r\nCollect(FloorColl, ForAll(SortByColumns(Distinct(Filter(Desks, 'Location:Building'.Value = BuildingDropdown.SelectedText.Result).FloorNumber, FloorNumber), \"Result\"), Text(ThisRecord.Result)));\r\n\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnChange",
                "module": "Booking Search",
                "type": "Booking Search.BuildingDropdown"
              }
            }
          ],
          "message": {
            "arguments": [
              "âˆ‚.Location_x003a_Building.Value"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.OnChange"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.OnChange",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 433,
                  "snippet": {
                    "text": "// clear search results\r\nUpdateContext({_results: Table()});\r\n// clear dependent dropdowns\r\nReset(FloorDropdown);\r\n// populate floor dropdown\r\n//ClearCollect(FloorCol, {FloorNum: \"Any\"}); Collect(FloorCol, Distinct(Filter(Desks, 'Location:Building'.Value = BuildingDropdown.SelectedText.Value), FloorNumber));\r\nClearCollect(FloorColl, \"Any\");\r\nCollect(FloorColl, ForAll(SortByColumns(Distinct(Filter(Desks, 'Location:Building'.Value = BuildingDropdown.SelectedText.Result).FloorNumber, FloorNumber), \"Result\"), Text(ThisRecord.Result)));\r\n\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnChange",
                "module": "Booking Search",
                "type": "Booking Search.BuildingDropdown"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 6,
                  "charOffset": 781,
                  "snippet": {
                    "text": "// start loading animation\r\nUpdateContext({_isLoading: true});\r\n// store form options\r\nUpdateContext(\r\n    {\r\n        _city: CityDropdown.SelectedText.Result,\r\n        _building: BuildingDropdown.SelectedText.Result,\r\n        _floor: FloorDropdown.SelectedText.Value,\r\n        _startDate: StartDatePicker.SelectedDate,\r\n        _startTime: LookUp(\r\n            Timeslots,\r\n            TimeFull = StartDateDropdown.SelectedText.TimeFull,\r\n            TimeInMin\r\n        ),\r\n        _duration: LookUp(\r\n            Durations,\r\n            TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten,\r\n            TimeLength\r\n        )\r\n    }\r\n);\r\n// store desks and reservations\r\nUpdateContext(\r\n    {\r\n        _Desks: Filter(\r\n            Desks,\r\n            'Location:City'.Value = _city && 'Location:Building'.Value = _building\r\n        ),\r\n        _reservations: Filter(\r\n            Reservations,\r\n            StartDate = _startDate && ((StartTime <= _startTime && EndTime > _startTime) || (StartTime < (_startTime + _duration) && EndTime > (_startTime + _duration)) || (StartTime >= _startTime && EndTime <= (_startTime + _duration)))\r\n        )\r\n    }\r\n);\r\nIf(\r\n    _floor = \"Any\",\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        _Desks\r\n    ),\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        Filter(\r\n            _Desks,\r\n            Value(_floor) = FloorNumber\r\n        ).ID\r\n    )\r\n);\r\n// filter out and store reserved desk IDs\r\nUpdateContext(\r\n    {\r\n        _ReservedDesksIDs: ForAll(\r\n            _reservations,\r\n            If(\r\n                Not(IsEmpty(DeskID)),\r\n                DeskID.Value,\r\n                \"\"\r\n            )\r\n        ).Value\r\n    }\r\n);\r\n// find available desks\r\nUpdateContext(\r\n    {\r\n        _results: SortByColumns(\r\n            Filter(\r\n                _filteredDesks,\r\n                Not(ID in _ReservedDesksIDs)\r\n            ),\r\n            \"DeskNumber\"\r\n        )\r\n    }\r\n);\r\n// end loading animation\r\nUpdateContext({_isLoading: false});\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Search",
                "type": "Booking Search.SearchBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "âˆ‚.Location_x003a_City.Value"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 788,
                  "snippet": {
                    "text": "// start loading animation\r\nUpdateContext({_isLoading: true});\r\n// store form options\r\nUpdateContext(\r\n    {\r\n        _city: CityDropdown.SelectedText.Result,\r\n        _building: BuildingDropdown.SelectedText.Result,\r\n        _floor: FloorDropdown.SelectedText.Value,\r\n        _startDate: StartDatePicker.SelectedDate,\r\n        _startTime: LookUp(\r\n            Timeslots,\r\n            TimeFull = StartDateDropdown.SelectedText.TimeFull,\r\n            TimeInMin\r\n        ),\r\n        _duration: LookUp(\r\n            Durations,\r\n            TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten,\r\n            TimeLength\r\n        )\r\n    }\r\n);\r\n// store desks and reservations\r\nUpdateContext(\r\n    {\r\n        _Desks: Filter(\r\n            Desks,\r\n            'Location:City'.Value = _city && 'Location:Building'.Value = _building\r\n        ),\r\n        _reservations: Filter(\r\n            Reservations,\r\n            StartDate = _startDate && ((StartTime <= _startTime && EndTime > _startTime) || (StartTime < (_startTime + _duration) && EndTime > (_startTime + _duration)) || (StartTime >= _startTime && EndTime <= (_startTime + _duration)))\r\n        )\r\n    }\r\n);\r\nIf(\r\n    _floor = \"Any\",\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        _Desks\r\n    ),\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        Filter(\r\n            _Desks,\r\n            Value(_floor) = FloorNumber\r\n        ).ID\r\n    )\r\n);\r\n// filter out and store reserved desk IDs\r\nUpdateContext(\r\n    {\r\n        _ReservedDesksIDs: ForAll(\r\n            _reservations,\r\n            If(\r\n                Not(IsEmpty(DeskID)),\r\n                DeskID.Value,\r\n                \"\"\r\n            )\r\n        ).Value\r\n    }\r\n);\r\n// find available desks\r\nUpdateContext(\r\n    {\r\n        _results: SortByColumns(\r\n            Filter(\r\n                _filteredDesks,\r\n                Not(ID in _ReservedDesksIDs)\r\n            ),\r\n            \"DeskNumber\"\r\n        )\r\n    }\r\n);\r\n// end loading animation\r\nUpdateContext({_isLoading: false});\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Search",
                "type": "Booking Search.SearchBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.SearchBtn.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 796,
                  "snippet": {
                    "text": "// start loading animation\r\nUpdateContext({_isLoading: true});\r\n// store form options\r\nUpdateContext(\r\n    {\r\n        _city: CityDropdown.SelectedText.Result,\r\n        _building: BuildingDropdown.SelectedText.Result,\r\n        _floor: FloorDropdown.SelectedText.Value,\r\n        _startDate: StartDatePicker.SelectedDate,\r\n        _startTime: LookUp(\r\n            Timeslots,\r\n            TimeFull = StartDateDropdown.SelectedText.TimeFull,\r\n            TimeInMin\r\n        ),\r\n        _duration: LookUp(\r\n            Durations,\r\n            TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten,\r\n            TimeLength\r\n        )\r\n    }\r\n);\r\n// store desks and reservations\r\nUpdateContext(\r\n    {\r\n        _Desks: Filter(\r\n            Desks,\r\n            'Location:City'.Value = _city && 'Location:Building'.Value = _building\r\n        ),\r\n        _reservations: Filter(\r\n            Reservations,\r\n            StartDate = _startDate && ((StartTime <= _startTime && EndTime > _startTime) || (StartTime < (_startTime + _duration) && EndTime > (_startTime + _duration)) || (StartTime >= _startTime && EndTime <= (_startTime + _duration)))\r\n        )\r\n    }\r\n);\r\nIf(\r\n    _floor = \"Any\",\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        _Desks\r\n    ),\r\n    ClearCollect(\r\n        _filteredDesks,\r\n        Filter(\r\n            _Desks,\r\n            Value(_floor) = FloorNumber\r\n        ).ID\r\n    )\r\n);\r\n// filter out and store reserved desk IDs\r\nUpdateContext(\r\n    {\r\n        _ReservedDesksIDs: ForAll(\r\n            _reservations,\r\n            If(\r\n                Not(IsEmpty(DeskID)),\r\n                DeskID.Value,\r\n                \"\"\r\n            )\r\n        ).Value\r\n    }\r\n);\r\n// find available desks\r\nUpdateContext(\r\n    {\r\n        _results: SortByColumns(\r\n            Filter(\r\n                _filteredDesks,\r\n                Not(ID in _ReservedDesksIDs)\r\n            ),\r\n            \"DeskNumber\"\r\n        )\r\n    }\r\n);\r\n// end loading animation\r\nUpdateContext({_isLoading: false});\r\n"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "Booking Search",
                "type": "Booking Search.SearchBtn"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 72,
                  "snippet": {
                    "text": "LookUp(Timeslots, TimeInMin = (StartDateDropdown.SelectedText.TimeInMin + LookUp(Durations, TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten, TimeLength)), TimeFull)"
                  }
                }
              },
              "properties": {
                "member": "Text",
                "module": "Booking Search",
                "type": "Booking Search.HiddenEndTimeQuery"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 98,
                  "charOffset": 74,
                  "snippet": {
                    "text": "LookUp(Timeslots, TimeInMin = (StartDateDropdown.SelectedText.TimeInMin + LookUp(Durations, TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten, TimeLength)), TimeFull)"
                  }
                }
              },
              "properties": {
                "member": "Text",
                "module": "Booking Search",
                "type": "Booking Search.HiddenEndTimeQuery"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.HiddenEndTimeQuery.Text",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 1,
                  "charOffset": 28,
                  "snippet": {
                    "text": "LookUp(Timeslots, TimeInMin = (StartDateDropdown.SelectedText.TimeInMin + LookUp(Durations, TimeLengthWritten = DurationDropdown.SelectedText.TimeLengthWritten, TimeLength)), TimeFull)"
                  }
                }
              },
              "properties": {
                "member": "Text",
                "module": "Booking Search",
                "type": "Booking Search.HiddenEndTimeQuery"
              }
            }
          ],
          "message": {
            "arguments": [
              "LookUp"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnBackground.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnBackground.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.NextBtnBackground"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnBackground.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnBackground.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.NextBtnBackground"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnIcon.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnIcon.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.NextBtnIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnIcon.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.NextBtnIcon.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.NextBtnIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.AttachmentIcon.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.AttachmentIcon.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.AttachmentIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "BookingResults.Gallery6.AttachmentIcon.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "BookingResults.Gallery6.AttachmentIcon.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "BookingResults",
                "type": "BookingResults.Gallery6.AttachmentIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Navigation",
                "type": "Navigation.Gallery1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Navigation",
                "type": "Navigation.Gallery1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.IconItem.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.IconItem.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Navigation",
                "type": "Navigation.Gallery1.IconItem"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.IconItem.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.IconItem.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Navigation",
                "type": "Navigation.Gallery1.IconItem"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.LabelItem.FocusedBorderThickness"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.LabelItem.FocusedBorderThickness",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "FocusedBorderThickness",
                "module": "Navigation",
                "type": "Navigation.Gallery1.LabelItem"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-FocusBorderShouldBeVisible",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Navigation.Gallery1.LabelItem.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Navigation.Gallery1.LabelItem.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Navigation",
                "type": "Navigation.Gallery1.LabelItem"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "PageHeading.BackBtn.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "PageHeading.BackBtn.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "PageHeading",
                "type": "PageHeading.BackBtn"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "PageHeading.BackBtn.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "PageHeading.BackBtn.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "PageHeading",
                "type": "PageHeading.BackBtn"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Appointments Screen.Gallery5.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Appointments Screen.Gallery5.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Appointments Screen",
                "type": "Appointments Screen.Gallery5"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Appointments Screen.Gallery5.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Appointments Screen.Gallery5.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Appointments Screen",
                "type": "Appointments Screen.Gallery5"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.CloseIcon.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.CloseIcon.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Details",
                "type": "Booking Details.CloseIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.CloseIcon.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.CloseIcon.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Details",
                "type": "Booking Details.CloseIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Rectangle1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Rectangle1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Details",
                "type": "Booking Details.Rectangle1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Rectangle1.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Rectangle1.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Details",
                "type": "Booking Details.Rectangle1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Icon2.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Icon2.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Details",
                "type": "Booking Details.Icon2"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Icon2.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Icon2.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Details",
                "type": "Booking Details.Icon2"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Label1.FocusedBorderThickness"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Label1.FocusedBorderThickness",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "FocusedBorderThickness",
                "module": "Booking Details",
                "type": "Booking Details.Label1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-FocusBorderShouldBeVisible",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Label1.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Label1.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Details",
                "type": "Booking Details.Label1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.CloseModalIcon.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.CloseModalIcon.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.CloseModalIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.CloseModalIcon.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.CloseModalIcon.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Search",
                "type": "Booking Search.CloseModalIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle3.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle3.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.Rectangle3"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle3.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle3.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.Rectangle3"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle4.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle4.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.Rectangle4"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle4.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.Rectangle4.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.Rectangle4"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.FloorPlanIcon.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.FloorPlanIcon.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.FloorPlanIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.FloorPlanIcon.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BookingResultsGallery.FloorPlanIcon.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Booking Search",
                "type": "Booking Search.BookingResultsGallery.FloorPlanIcon"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.CityDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.CityDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.CityDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.BuildingDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.BuildingDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.FloorDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.FloorDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.FloorDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.StartDatePicker.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.StartDatePicker.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.StartDatePicker"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.StartDateDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.StartDateDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.StartDateDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Search.DurationDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Search.DurationDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Booking Search",
                "type": "Booking Search.DurationDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Landing Step 1 Screen.HtmlText1.HtmlText"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Landing Step 1 Screen.HtmlText1.HtmlText",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "HtmlText",
                "module": "Landing Step 1 Screen",
                "type": "Landing Step 1 Screen.HtmlText1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Low"
          },
          "ruleId": "acc-HtmlShouldNotBeInteractive",
          "ruleIndex": 6
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Landing Step 1 Screen.LangDropdown_1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Landing Step 1 Screen.LangDropdown_1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Landing Step 1 Screen",
                "type": "Landing Step 1 Screen.LangDropdown_1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Landing Step 2 Screen.HtmlText2.HtmlText"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Landing Step 2 Screen.HtmlText2.HtmlText",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "HtmlText",
                "module": "Landing Step 2 Screen",
                "type": "Landing Step 2 Screen.HtmlText2"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Low"
          },
          "ruleId": "acc-HtmlShouldNotBeInteractive",
          "ruleIndex": 6
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Profile Screen.LangDropdown.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Profile Screen.LangDropdown.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Profile Screen",
                "type": "Profile Screen.LangDropdown"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "App.Search-illustration"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "App.Search-illustration",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "Search-illustration",
                "module": "App",
                "type": "App"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-UnusedMediaResources",
          "ruleIndex": 7
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.disableCancelButton"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.disableCancelButton",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "disableCancelButton",
                "module": "Booking Details",
                "type": "Booking Details"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-UnusedVariables",
          "ruleIndex": 8
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.displayInfo"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.displayInfo",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "displayInfo",
                "module": "Booking Details",
                "type": "Booking Details"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-UnusedVariables",
          "ruleIndex": 8
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Booking Details.Details_FloorNum.Text"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Booking Details.Details_FloorNum.Text",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "Text",
                "module": "Booking Details",
                "type": "Booking Details.Details_FloorNum"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-InefficientDelayLoading",
          "ruleIndex": 9
        }
      ],
      "tool": {
        "driver": {
          "fullName": "PowerApps app checker",
          "name": "PowerApps app checker",
          "rules": [
            {
              "id": "app-SuggestRemoteExecutionHint",
              "messageStrings": {
                "issue": {
                  "text": "Delegation warning. The \"{0}\" part of this formula might not work correctly on large data sets."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.",
                  "Try simplifying the formula.",
                  "Try moving your data to a different data source."
                ],
                "level": "Medium",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-SuggestRemoteExecutionHint-OpNotSupportedByColumn",
              "messageStrings": {
                "issue": {
                  "text": "Delegation warning. The highlighted part of this formula might not work correctly with column \"{0}\" on large data sets."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.",
                  "Try simplifying the formula.",
                  "Try moving your data to a different data source."
                ],
                "level": "Medium",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-SuggestRemoteExecutionHint-OpNotSupportedByService",
              "messageStrings": {
                "issue": {
                  "text": "Delegation warning. The highlighted part of this formula might not work correctly on large data sets. The \"{0}\" operation is not supported by this connector."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.",
                  "Try simplifying the formula.",
                  "Try moving your data to a different data source."
                ],
                "level": "Medium",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "acc-AccessibleLabelNeeded",
              "messageStrings": {
                "issue": {
                  "text": "Missing accessible label"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Edit the accessible label property to describe the item."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "If there's no accessible text, people who canâ€™t see the screen won't understand whatâ€™s in images and controls."
              }
            },
            {
              "id": "acc-TabIndexShouldBeDefinedForInteractiveControl",
              "messageStrings": {
                "issue": {
                  "text": "Missing tab stop"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Set TabIndex to 0 or greater to ensure that interactive elements have a tab stop."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "People who use the keyboard with your app will not be able to access this element without a tab stop."
              }
            },
            {
              "id": "acc-FocusBorderShouldBeVisible",
              "messageStrings": {
                "issue": {
                  "text": "Focus isn't showing"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Change the FocusedBorderThickness property to be more than 0."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "If the focus isn't visible, people who don't use a mouse won't be able to see it when they're interacting with the app."
              }
            },
            {
              "id": "acc-HtmlShouldNotBeInteractive",
              "messageStrings": {
                "issue": {
                  "text": "If this HTML contains interactive elements, consider using another method, or remove the HTML from this element."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Use another method instead of HTML, or remove the HTML from this element."
                ],
                "level": "Low",
                "primaryCategory": "accessibility",
                "whyFix": "Your app won't work correctly and will not be accessible if you place interactive HTML elements."
              }
            },
            {
              "id": "app-UnusedMediaResources",
              "messageStrings": {
                "issue": {
                  "text": "Unused media files"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Remove the unused media file in the Media pane."
                ],
                "level": "Medium",
                "primaryCategory": "performance",
                "whyFix": "This media file is not referenced by any control formulas so it is not needed. Removing it will improve performance."
              }
            },
            {
              "id": "app-UnusedVariables",
              "messageStrings": {
                "issue": {
                  "text": "Unused variable"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Remove the unused variable."
                ],
                "level": "Medium",
                "primaryCategory": "performance",
                "whyFix": "This variable is declared but is not referenced by any control, so it is not needed."
              }
            },
            {
              "id": "app-InefficientDelayLoading",
              "messageStrings": {
                "issue": {
                  "text": "Inefficient delay loading"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Use variables, collections, and navigation context to share state across screens instead."
                ],
                "level": "Medium",
                "primaryCategory": "performance",
                "whyFix": "Controls that reference controls on other screens can slow down app loading and navigation. Doing this may force the app to load the other screens immediately, rather than waiting until the user navigates to that screen."
              }
            }
          ],
          "version": "1.300"
        }
      }
    }
  ],
  "version": "2.1.0"
}